# Code generated by chatGPT - 10 Feb 2023
# Question was: "display sht30 sensor output in python on raspberry pi"

import smbus
import time

# Define the I2C bus and address of the SHT30 sensor
bus = smbus.SMBus(1)
address = 0x44

# Define the measurement command
measure_cmd = [0x2C, 0x06]

# Function to read the data from the sensor
def read_sht30():
    bus.write_i2c_block_data(address, measure_cmd[0], [measure_cmd[1]])
    time.sleep(0.5)
    data = bus.read_i2c_block_data(address, 0x00, 6)
    temp = ((data[0] << 8) + data[1]) * 175.72 / 65536 - 46.85
    humidity = ((data[3] << 8) + data[4]) * 125 / 65536 - 6
    return temp, humidity

# Loop to display the sensor output
while True:
    temp, humidity = read_sht30()
    print("Temperature: {:.2f}°C, Humidity: {:.2f}%".format(temp, humidity))
    time.sleep(1)

# Another answer to the same question
import smbus2
import struct

# Get I2C bus
bus = smbus2.SMBus(1)

# SHT30 address on the I2C bus
address = 0x44

# Send measurement command
data = [0x2C, 0x06]
bus.write_i2c_block_data(address, data[0], data[1:])

# Read data back from sensor
data = bus.read_i2c_block_data(address, 0, 6)

# Unpack the data using the struct library
temp, hum = struct.unpack('>HH', bytes(data))

# Calculate temperature and humidity values
temp = 175.0 * temp / 65535 - 45
hum = 100 * hum / 65535

# Print the values
print("Temperature: %.1f°C" % temp)
print("Humidity: %.1f%%" % hum)
